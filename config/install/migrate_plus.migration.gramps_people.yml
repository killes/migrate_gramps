id: gramps_people
label: 'Migration for Gramps people'
dependencies:
  module:
    - migrate_gramps
  enforced:
    module:
      - migrate_gramps
migration_group: gramps
migration_dependencies:
  required:
    - gramps_attributes
    - gramps_citations
    - gramps_events
    - gramps_notes
    - gramps_tags
    - gramps_urls
source:
  track_changes: true
#  data_parser_plugin: xpath20
  urls:
    # TODO: figure out how to use a file provided from CLI
    # - sites/default/files/example.gramps.orig
    - sites/default/files/example.gramps.orig
  constants:
    TITLE_PREFIX: 'Gramps person '
    ID: 'id'
    PERSON: 'person'

  item_selector: //ns:person
  fields:
    - name: src_handle
      label: 'Gramps handle'
      selector: '@handle'
    - name: src_changed
      label: 'Last changed'
      selector: '@change'
    - name: src_id
      label: 'id'
      selector: '@id'
    - name: src_gender
      label: 'Gender'
      selector: 'ns:gender'
      # Event references are migrated separately
    - name: src_parentin
      label: 'Family parent reference'
      selector: ns:parentin/@hlink
    - name: src_childof
      label: 'Child reference'
      selector: ns:childof/@hlink
    - name: src_noteref
      label: 'Note Reference'
      selector: 'ns:noteref/@hlink'
    - name: src_citationref
      label: 'Citation reference'
      selector: ns:citationref/@hlink
    - name: src_tags
      label: 'Tag Reference'
      selector: 'ns:tagref/@hlink'
  ids:
    src_handle:
      type: string
process:
  field_handle:
    plugin: get
    source: src_handle
  field_id:
    plugin: get
    source: src_id
  title:
    plugin: concat
    source:
      - constants/TITLE_PREFIX
      - src_id
  changed:
    plugin: get
    source: src_changed
  field_gender:
    plugin: get
    source: src_gender
  # "allow_multiple" relies on patch 105 from
  # https://www.drupal.org/project/drupal/issues/2890844
  # Also, we have to rely on the names being created in the correct order.
  # It would be nice if we could order by our secondary ID.
  names:
    plugin: migration_lookup
    source: src_handle
    migration: gramps_names
    allow_multiple: true
  # We need to extract the values we want from the "id" column.
  field_names:
    plugin: callback
    callable: array_column
    unpack_source: true
    source:
      - '@names'
      - constants/ID
  field_events:
    plugin: migration_lookup
    source: src_handle
    migration: gramps_eventrefs
  addresses:
    plugin: migration_lookup
    source:
      - src_handle
      - constants/PERSON
    migration: gramps_addresses
    allow_multiple: true
  # We need to extract the values we want from the "id" column.
  field_addresses:
    -
      plugin: skip_on_empty
      source: '@addresses'
      method: process
    -
      plugin: callback
      callable: array_column
      unpack_source: true
      source:
        - '@addresses'
        - constants/ID
  attributes:
    plugin: migration_lookup
    source:
      - src_handle
      - constants/PERSON
    migration: gramps_attributes
    allow_multiple: true
  # We need to extract the values we want from the "id" column.
  field_attributes:
    -
      plugin: skip_on_empty
      source: '@attributes'
      method: process
    -
      plugin: callback
      callable: array_column
      unpack_source: true
      source:
        - '@attributes'
        - constants/ID
  field_note_reference:
    plugin: migration_lookup
    source: src_noteref
    migration: gramps_notes
  field_tags:
    plugin: migration_lookup
    source: src_tags
    migration: gramps_tags
destination:
  plugin: 'entity:node'
  default_bundle: person
